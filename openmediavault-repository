#!/bin/bash

set -e
#set -x

################################################################################

SCRIPTDIR=$(dirname "$0")
SCRIPTDIR=$(cd ${SCRIPTDIR} && pwd)
SCRIPTDIR="${SCRIPTDIR}/.scripts"

OUTDIR="/media/5fd18e51-966f-4664-b9cf-999c23d2855f/debarchive"
MIRROR="1"
BUILD="1"
COPY="1"
DEBARCHIVE="1"

while getopts ":o:mbcd" opt; do
	case $opt in
		o) OUTDIR="$OPTARG" ;;
		m) MIRROR="0" ;;
		b) BUILD="0" ;;
		c) COPY="0" ;;
		d) DEBARCHIVE="0" ;;
		\?) echo "Invalid option: -$OPTARG" >&2 && exit 1 ;;
		:) echo "Option -$OPTARG requires an argument." >&2 && exit 1 ;;
	esac
done

[ -d "$(dirname ${OUTDIR})" ] || exit 1

#rm -Rf ${OUTDIR}/openmediavault ${OUTDIR}/omvextras

################################################################################
function mirror_repository() {
	local SCRIPTDIR="$1"
	local OUTDIR="$2"
	############################################################################
	${SCRIPTDIR}/mirror_repository \
		-d "${OUTDIR}/.openmediavault-mirror" \
		-u "http://packages.openmediavault.org/public" \
		-s "stoneburner" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/mirror_repository \
		-d "${OUTDIR}/.omvextras-mirror" \
		-u "http://omv-extras.org/debian" \
		-s "stoneburner-backports stoneburner stoneburner-testing stoneburner-vb stoneburner-plex stoneburner-greyhole stoneburner-vdr stoneburner-btsync stoneburner-gluster stoneburner-mono stoneburner-mono-testing stoneburner-hwraid" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/mirror_repository \
		-d "${OUTDIR}/.dh2k-mirror" \
		-u "http://dh2k.omv-extras.org/debian" \
		-s "stoneburner-miller stoneburner-miller-testing stoneburner-vpn plex-wheezy-mirror virtualbox-wheezy-mirror" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/mirror_repository \
		-d "${OUTDIR}/.bintray-stoneburner-beta-mirror" \
		-u "http://dl.bintray.com/openmediavault-plugin-developers/stoneburner-beta" \
		-s "wheezy" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/mirror_repository \
		-d "${OUTDIR}/.bintray-stoneburner-zfs-mirror" \
		-u "http://dl.bintray.com/openmediavault-plugin-developers/stoneburner-zfs" \
		-s "wheezy" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/mirror_repository \
		-d "${OUTDIR}/.bintray-stoneburner-zfs-testing-mirror" \
		-u "http://dl.bintray.com/openmediavault-plugin-developers/stoneburner-zfstesting" \
		-s "wheezy" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/mirror_repository \
		-d "${OUTDIR}/.bintray-stoneburner-docker-mirror" \
		-u "http://dl.bintray.com/openmediavault-plugin-developers/stoneburner-docker" \
		-s "wheezy" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/mirror_repository \
		-d "${OUTDIR}/.bintray-stoneburner-docker-testing-mirror" \
		-u "http://dl.bintray.com/openmediavault-plugin-developers/stoneburner-docker2" \
		-s "wheezy" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
}
################################################################################
if [ "${MIRROR}" == "0" ]; then
	mirror_repository "${SCRIPTDIR}" "${OUTDIR}"
fi
################################################################################

################################################################################
function build_package() {
	local SCRIPTDIR="$1"
	local OUTDIR="$2"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "main" \
		-p "openmediavault" \
		-b "main"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "testing" \
		-p "openmediavault" \
		-b "testing"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "main" \
		-p "openmediavault-keyring" \
		-b "main"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "testing" \
		-p "openmediavault-keyring" \
		-b "testing"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "main" \
		-p "openmediavault-menuconfig" \
		-b "master"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "testing" \
		-p "openmediavault-menuconfig" \
		-b "testing"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "testing" \
		-p "openmediavault-testplugin" \
		-b "master"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "main" \
		-p "openmediavault-firewall" \
		-b "master"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "testing" \
		-p "openmediavault-firewall" \
		-b "testing"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.omvextras-build" \
		-s "stoneburner" \
		-c "main" \
		-p "openmediavault-omvextrasorg" \
		-b "main"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.omvextras-build" \
		-s "stoneburner" \
		-c "main" \
		-p "openmediavault-ddclient" \
		-b "main"
	############################################################################
	${SCRIPTDIR}/build_package \
		-o "${OUTDIR}/.omvextras-build" \
		-s "stoneburner-testing" \
		-c "main" \
		-p "openmediavault-dnsmasq" \
		-b "main"
	############################################################################
}
################################################################################
if [ "${BUILD}" == "0" ]; then
	build_package "${SCRIPTDIR}" "${OUTDIR}"	
fi
################################################################################

################################################################################
function copy_packages() {
	local SCRIPTDIR="$1"
	local OUTDIR="$2"
	############################################################################
	${SCRIPTDIR}/copy_packages \
		-d "${OUTDIR}/openmediavault" \
		-i "${OUTDIR}/.openmediavault-mirror ${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "main" \
		-a "amd64 i386" \
		-r
	############################################################################
	${SCRIPTDIR}/copy_packages \
		-d "${OUTDIR}/openmediavault" \
		-i "${OUTDIR}/.openmediavault-mirror ${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "main" \
		-k "testing" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/copy_packages \
		-d "${OUTDIR}/openmediavault" \
		-i "${OUTDIR}/.openmediavault-mirror ${OUTDIR}/.openmediavault-build" \
		-s "stoneburner" \
		-c "testing" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/copy_packages \
		-d "${OUTDIR}/omvextras" \
		-i "${OUTDIR}/.omvextras-mirror ${OUTDIR}/.omvextras-build" \
		-s "stoneburner-backports stoneburner stoneburner-testing stoneburner-vb stoneburner-plex stoneburner-greyhole stoneburner-vdr stoneburner-btsync stoneburner-gluster stoneburner-mono stoneburner-mono-testing stoneburner-hwraid" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/copy_packages \
		-d "${OUTDIR}/omvextras" \
		-i "${OUTDIR}/.dh2k-mirror ${OUTDIR}/.dh2k-build" \
		-s "stoneburner-miller stoneburner-miller-testing stoneburner-vpn plex-wheezy-mirror virtualbox-wheezy-mirror" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/copy_packages \
		-d "${OUTDIR}/omvextras" \
		-i "${OUTDIR}/.bintray-stoneburner-beta-mirror ${OUTDIR}/.bintray-stoneburner-beta-build" \
		-s "wheezy" \
		-z "stoneburner-beta" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/copy_packages \
		-d "${OUTDIR}/omvextras" \
		-i "${OUTDIR}/.bintray-stoneburner-zfs-mirror ${OUTDIR}/.bintray-stoneburner-zfs-build" \
		-s "wheezy" \
		-z "stoneburner-zfs" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/copy_packages \
		-d "${OUTDIR}/omvextras" \
		-i "${OUTDIR}/.bintray-stoneburner-zfs-testing-mirror ${OUTDIR}/.bintray-stoneburner-zfs-testing-build" \
		-s "wheezy" \
		-z "stoneburner-zfs-testing" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/copy_packages \
		-d "${OUTDIR}/omvextras" \
		-i "${OUTDIR}/.bintray-stoneburner-docker-mirror ${OUTDIR}/.bintray-stoneburner-docker-build" \
		-s "wheezy" \
		-z "stoneburner-docker" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
	${SCRIPTDIR}/copy_packages \
		-d "${OUTDIR}/omvextras" \
		-i "${OUTDIR}/.bintray-stoneburner-docker-testing-mirror ${OUTDIR}/.bintray-stoneburner-docker-testing-build" \
		-s "wheezy" \
		-z "stoneburner-docker-testing" \
		-c "main" \
		-a "amd64 i386"
	############################################################################
}
################################################################################
if [ "${COPY}" == "0" ]; then
	copy_packages "${SCRIPTDIR}" "${OUTDIR}"	
fi
################################################################################

################################################################################
function debarchive_repository() {
	local SCRIPTDIR="$1"
	local OUTDIR="$2"
	############################################################################
	${SCRIPTDIR}/debarchive_repository \
		-d "${OUTDIR}/openmediavault" \
		-g "${OUTDIR}/.gnupg" \
		-n "openmediavault" \
		-s "stoneburner" \
		-c "main" \
		-a "amd64 i386" \
		-r
	############################################################################
	${SCRIPTDIR}/debarchive_repository \
		-d "${OUTDIR}/openmediavault" \
		-g "${OUTDIR}/.gnupg" \
		-n "openmediavault" \
		-s "stoneburner" \
		-c "testing" \
		-a "amd64 i386" \
		-r
	############################################################################
	${SCRIPTDIR}/debarchive_repository \
		-d "${OUTDIR}/omvextras" \
		-g "${OUTDIR}/.gnupg" \
		-n "omvextras" \
		-s "stoneburner-backports stoneburner stoneburner-testing stoneburner-vb stoneburner-plex stoneburner-greyhole stoneburner-vdr stoneburner-btsync stoneburner-gluster stoneburner-mono stoneburner-mono-testing stoneburner-hwraid stoneburner-miller stoneburner-miller-testing stoneburner-vpn plex-wheezy-mirror virtualbox-wheezy-mirror stoneburner-beta stoneburner-zfs stoneburner-zfs-testing stoneburner-docker stoneburner-docker-testing " \
		-c "main" \
		-a "amd64 i386" \
		-r
	############################################################################
}
################################################################################
if [ "${DEBARCHIVE}" == "0" ]; then
	debarchive_repository "${SCRIPTDIR}" "${OUTDIR}"	
fi
################################################################################

################################################################################
echo "[ DONE ]"
exit 0
################################################################################
